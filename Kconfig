menu "DMX/RDM Configuration"

    config RDM_DEVICE_UID_MAN_ID
        hex "The manufacturer ID for this device's UID"
        range 0x0001 0x7fff
        default 0x05e0
        help
            Set the default manufacturer ID for this device's UID. The accepted
            range is 0x0001 to 0x7fff (inclusive).

    config RDM_DEVICE_UID_DEV_ID
        hex "The device ID for this device's UID"
        range 0x00000000 0xffffffff
        default 0xffffffff
        help
            Set the default device ID for this device's UID. The accepted
            range is 0x00000000 to 0xffffffff (inclusive). Setting this value to
            0xffffffff sets it to its default value.

    config DMX_ISR_IN_IRAM
        bool "Place DMX ISR functions in IRAM"
        default y
        select GPTIMER_ISR_IRAM_SAFE
        select GPTIMER_CTRL_FUNC_IN_IRAM
        help
            The DMX driver ISR is placed in IRAM to reduce latency. In 
            particular, printing to the terminal with this option disabled can
            interfere with the RDM timer causing it to output RDM that is
            slightly out of specification. ESP-IDF v5 only: enabling this also
            enables some kconfig options in the GPTimer driver.
    
    config RDM_STATIC_DEVICE_DISCOVERY
        bool "Enable static memory use for RDM device discovery"
        default n
        help
            RDM Device Discovery needs nearly 1KB of memory. Allocating this
            much memory on the stack can lead to stack overflow crashes.
            Therefore, the default behavior is for the DMX driver to heap
            allocate the needed memory. Enabling this option instructs the DMX
            driver to allocate the needed memory on the stack.

    config RDM_DEBUG_DEVICE_DISCOVERY
        bool "Enable debugging for RDM device discovery"
        default n
        help
            Enabling this option can help to find bugs within the DMX driver's
            RDM discovery algorithm, but it can make the discovery process take
            significantly longer. This options should remain disabled unless
            changes are being made to the RDM API.

    config RDM_RESPONDER_MAX_PARAMETERS
        int "The maximum number of parameters that the RDM responder can support"
        range 0 512
        default 16
        help
            This is the maximum number of RDM parameters that the RDM driver
            supports. Increasing this number increases the size of the RDM
            driver.

endmenu
